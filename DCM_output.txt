안녕하세요. 기존 코드에 DICOM RT Dose 출력 옵션을 추가하는 방법에 대해 논리적으로 설명해 드리겠습니다. 동의하시면, 아래 설명에 따라 작업을 진행하겠습니다.

## 개요

현재 코드는 계산된 선량(Dose)을 raw 형식의 파일로 저장합니다. 여기에 **DICOM RT Dose 형식으로 출력하는 옵션을 추가**하는 것이 목표입니다.

핵심은 계산 완료된 3차원 선량 데이터(배열)를 DICOM 표준 형식에 맞는 구조로 변환하고, 입력으로 사용된 DICOM RT Plan 파일의 환자 및 치료 계획 정보를 가져와 새로운 DICOM 파일에 이식하는 것입니다.

-----

## 구현 절차

DICOM RT Dose 파일 생성을 위해 외부 라이브러리(예: C++용 **DCMTK**)를 사용하는 것을 전제로 설명합니다.

### 1\. 데이터 준비 단계

  - **선량 데이터 확보**: 현재 코드에서 선량 계산이 완료된 후 메모리에 있는 3차원 선량 격자(3D Dose Grid) 데이터를 가져옵니다.
  - **메타데이터 추출**: 입력으로 받은 DICOM RT Plan 파일에서 새로운 DICOM RT Dose 파일을 만드는 데 필요한 주요 메타데이터를 추출합니다.
      - 환자 정보 (Patient Name, ID 등)
      - 연구 정보 (Study Instance UID, Series Instance UID)
      - 좌표계 정보 (Frame of Reference UID)

### 2\. DICOM RT Dose 객체 생성

  - DCMTK와 같은 라이브러리를 사용하여 빈 DICOM 데이터셋(Dataset)을 생성합니다.
  - 이 데이터셋의 **SOP Class UID**를 'RT Dose Storage'(1.2.840.10008.5.1.4.1.1.481.2)로 설정합니다.
  - 새로운 DICOM 파일을 위한 고유 식별 번호(**SOP Instance UID**)를 생성하여 할당합니다.

### 3\. 필수 DICOM 태그(Tag) 정보 채우기

  - **환자 및 연구 정보 복사**: 1단계에서 추출한 RT Plan의 환자, 연구, 장비 관련 모듈(Module) 정보를 새로 생성한 DICOM 객체에 그대로 복사하여 데이터 일관성을 유지합니다.
  - **기하 정보 설정**: 계산된 선량 격자의 기하학적 정보를 해당 태그에 입력합니다.
      - `Rows`, `Columns`: 격자의 X, Y 축 크기
      - `NumberOfFrames`: 슬라이스(Z축) 개수
      - `PixelSpacing`: X, Y 축 간격 (mm)
      - `SliceThickness`: Z 축 간격 (mm)
      - `ImagePositionPatient`: 첫 슬라이스의 시작 좌표 (X, Y, Z)
  - **선량 정보 설정**: 선량 값의 단위를 설정하고, 실제 데이터를 어떻게 저장할지 정의합니다.
      - `DoseUnits`: 선량 단위 (예: 'GY')
      - `DoseGridScaling`: **가장 중요한 태그 중 하나**입니다. DICOM은 보통 선량 값을 정수(Integer)로 저장하므로, 실제 물리적 선량 값(float)으로 변환하기 위한 스케일링 팩터가 필요합니다. `실제 선량 값 = 저장된 픽셀 값 * DoseGridScaling`

### 4\. 선량 데이터 변환 및 저장

  - 메모리에 있는 부동소수점(floating-point) 형태의 3차원 선량 데이터를 `DoseGridScaling` 값을 이용해 정수(16-bit or 32-bit unsigned integer) 배열로 변환합니다.
  - 변환된 정수 배열을 `PixelData` (7FE0,0010) 태그에 저장합니다.

### 5\. 코드 연동 및 파일 저장

  - 기존 코드의 메인 실행부에 `--output-format` 과 같은 커맨드 라인 옵션을 추가하여 `raw`, `mhd`, `dcm` 등 출력 포맷을 선택할 수 있도록 합니다.
  - 사용자가 'dcm' 옵션을 선택하면, 선량 계산이 끝난 후 위 1-4단계의 로직을 수행하는 새로운 함수를 호출합니다.
  - 완성된 DICOM 객체를 지정된 경로에 `.dcm` 확장자로 저장합니다.

-----

## 함수 호출 관계 도식화

새로운 기능이 추가되었을 때의 예상 호출 흐름입니다.

```mermaid
graph TD
    A[main()] --> B{입력 파라미터 분석};
    B --> C{출력 포맷 확인};
    C -- "dcm" 선택 --> D[선량 계산 수행];
    C -- "raw/mhd" 선택 --> D;
    D --> E{계산 결과 후처리};
    E -- "dcm" 선택 --> F[create_dicom_rt_dose()];
    E -- "raw/mhd" 선택 --> G[save_raw_file()];
    F --> H[DICOM 파일 저장];
    G --> I[Raw/MHD 파일 저장];

    subgraph "DICOM RT Dose 생성 모듈"
        F;
    end
```

-----

## 기능 추가에 따른 확인 사항

  - **중복 기능**: 선량 계산 로직은 재사용되며, 출력 부분만 분기 처리되므로 기능 중복은 없습니다.
  - **누락 기능**:
      - 생성된 DICOM RT Dose의 좌표계(`Frame of Reference UID`)가 원본 RT Plan 및 CT 영상의 좌표계와 반드시 일치해야 합니다. 이 정보가 누락되면 다른 소프트웨어에서 선량 중첩(fusion)이 불가능합니다.
      - 오류 처리: DICOM 파일 생성 실패 또는 필수 태그 누락 시 사용자에게 명확한 에러 메시지를 반환하는 기능이 필요합니다.